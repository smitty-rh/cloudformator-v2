---
- hosts: localhost

  tasks:
    - name: Locating File
      find:
        paths: "/builds/cfme/{{ ystream }}/{{ version }}/"
        patterns: "cfme-rhevm*.qcow2"
      register: qcow2_image

    - name: Log into RHV
      ovirt_auth:
        url: "https://{{ myhost }}/ovirt-engine/api"
        insecure: true
        username: "{{ redhatID }}"
        password: "{{ redhatPass }}"
        state: present

    - name: Creating VM
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        state: present
        cluster: Default
        name: "{{ newvm }}"
        memory: 8GiB
        cpu_cores: 2
        cpu_sockets: 2
        type: server
        operating_system: rhel_7x64
        nics:
          - name: nic1
            profile_name: ovirtmgmt

    - name: Import QCOW2 to disk on RHV
      ovirt_disk:
        auth: "{{ ovirt_auth }}"
        name: "{{ newvm }}_Disk1"
        state: attached
        vm_name: "{{ newvm }}"
        interface: virtio
        size: 40GiB
        format: cow
        image_path: "{{ item.path }}"
        storage_domain: data
        bootable: True
      with_items: "{{ qcow2_image.files }}"

    - name: Adding DB Disk
      ovirt_disk:
        auth: "{{ ovirt_auth }}"
        name: "{{ newvm }}_DB"
        state: attached
        vm_name: "{{ newvm }}"
        interface: virtio
        size: 100GiB
        storage_domain: data

    - name: Powering on Appliance
      ovirt_vm:
        auth: "{{ ovirt_auth }}"
        name: "{{ newvm }}"
        state: running
        wait: yes

    - pause:
        minutes: 1

    - name: Gathering IP Info
      ovirt_nic:
        auth: "{{ ovirt_auth }}"
        vm: "{{ newvm }}"
        name: nic1
      register: IPInfo

    - name: Gathering facts of appliance
      setup:
      register: moreInfo
      delegate_to: '{{ IPInfo.nic.reported_devices[0].ips[0].address }}'

    - name: Setting up DB on vdb
      shell: appliance_console_cli --internal --dbdisk /dev/vdb --region 0 --password smartvm
      delegate_to: '{{ IPInfo.nic.reported_devices[0].ips[0].address }}'
      when: moreInfo.ansible_facts.ansible_devices.vda.size != '100.00 GB'

    - name: Setting up DB on vda
      shell: appliance_console_cli --internal --dbdisk /dev/vda --region 0 --password smartvm
      delegate_to: '{{ IPInfo.nic.reported_devices[0].ips[0].address }}'
      when: moreInfo.ansible_facts.ansible_devices.vdb.size != '100.00 GB'

    - name: Starting EVM service manually
      shell: systemctl start evmserverd.service
      delegate_to: '{{ IPInfo.nic.reported_devices[0].ips[0].address }}'

    - debug: 
        msg: "You should now be able to access your appliance via https://{{ IPInfo.nic.reported_devices[0].ips[0].address }} Please allow roughly 15 minutes for the service to fully come online."
